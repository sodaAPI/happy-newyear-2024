{
  "version": 3,
  "sources": ["../../tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js", "../../tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js", "../../tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js", "../../tsparticles-updater-destroy/esm/Options/Classes/Split.js", "../../tsparticles-updater-destroy/esm/Options/Classes/Destroy.js", "../../tsparticles-updater-destroy/esm/Utils.js", "../../tsparticles-updater-destroy/esm/DestroyUpdater.js", "../../tsparticles-updater-destroy/esm/index.js", "../../tsparticles-shape-line/esm/LineDrawer.js", "../../tsparticles-shape-line/esm/index.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsAudio.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsNote.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsMelody.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsEvent.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsIcon.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsIcons.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/SoundsVolume.js", "../../tsparticles-plugin-sounds/esm/Options/Classes/Sounds.js", "../../tsparticles-plugin-sounds/esm/utils.js", "../../tsparticles-plugin-sounds/esm/SoundsInstance.js", "../../tsparticles-plugin-sounds/esm/index.js", "../../tsparticles-updater-stroke-color/esm/Utils.js", "../../tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js", "../../tsparticles-updater-stroke-color/esm/index.js", "../../tsparticles-preset-fireworks/esm/options.js", "../../tsparticles-preset-fireworks/esm/index.js"],
  "sourcesContent": ["import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n", "import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n", "import { OptionsColor, deepExtend, executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n", "import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n", "import { getRangeValue, getValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? 0),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? 0),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? 0),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: \"precise\",\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < 0.5) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, 500);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n", "import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n", "import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container), refresh);\n}\n", "export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n", "import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n", "import { isObject } from \"tsparticles-engine\";\nexport class SoundsAudio {\n    constructor() {\n        this.loop = false;\n        this.source = \"\";\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (isObject(data)) {\n            if (data.loop !== undefined) {\n                this.loop = data.loop;\n            }\n            if (data.source !== undefined) {\n                this.source = data.source;\n            }\n        }\n        else {\n            this.source = data;\n        }\n    }\n}\n", "export class SoundsNote {\n    constructor() {\n        this.duration = 500;\n        this.value = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n", "import { SoundsNote } from \"./SoundsNote\";\nexport class SoundsMelody {\n    constructor() {\n        this.loop = false;\n        this.melodies = [];\n        this.notes = [];\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.loop !== undefined) {\n            this.loop = data.loop;\n        }\n        if (data.melodies !== undefined) {\n            this.melodies = data.melodies.map((s) => {\n                const tmp = new SoundsMelody();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n        if (data.notes !== undefined) {\n            this.notes = data.notes.map((s) => {\n                const tmp = new SoundsNote();\n                tmp.load(s);\n                return tmp;\n            });\n        }\n    }\n}\n", "import { isArray, isFunction, isString, } from \"tsparticles-engine\";\nimport { SoundsAudio } from \"./SoundsAudio\";\nimport { SoundsMelody } from \"./SoundsMelody\";\nimport { SoundsNote } from \"./SoundsNote\";\nexport class SoundsEvent {\n    constructor() {\n        this.event = [];\n        this.notes = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.event !== undefined) {\n            this.event = data.event;\n        }\n        if (data.audio !== undefined) {\n            if (isArray(data.audio)) {\n                this.audio = data.audio.map((s) => {\n                    const tmp = new SoundsAudio();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                this.audio = new SoundsAudio();\n                this.audio.load(data.audio);\n            }\n        }\n        if (data.notes !== undefined) {\n            this.notes = data.notes.map((t) => {\n                const tmp = new SoundsNote();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (data.melodies !== undefined) {\n            this.melodies = data.melodies.map((t) => {\n                const tmp = new SoundsMelody();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (data.filter !== undefined) {\n            if (isString(data.filter)) {\n                if (isFunction(window[data.filter])) {\n                    this.filter = window[data.filter];\n                }\n            }\n            else {\n                this.filter = data.filter;\n            }\n        }\n    }\n}\n", "export class SoundsIcon {\n    constructor() {\n        this.width = 24;\n        this.height = 24;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n        if (data.svg !== undefined) {\n            this.svg = data.svg;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n    }\n}\n", "import { SoundsIcon } from \"./SoundsIcon\";\nexport class SoundsIcons {\n    constructor() {\n        this.mute = new SoundsIcon();\n        this.unmute = new SoundsIcon();\n        this.volumeDown = new SoundsIcon();\n        this.volumeUp = new SoundsIcon();\n        this.mute.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M19.707,5.293c-0.391-0.391-1.023-0.391-1.414,0l-1.551,1.551c-0.345-0.688-0.987-1.02-1.604-1.02c-0.449,0-0.905,0.152-1.356,0.453l-2.672,1.781C10.357,8.561,8.904,9,8,9c-1.654,0-3,1.346-3,3v2c0,1.237,0.754,2.302,1.826,2.76l-1.533,1.533c-0.391,0.391-0.391,1.023,0,1.414C5.488,19.902,5.744,20,6,20s0.512-0.098,0.707-0.293l2.527-2.527c0.697,0.174,1.416,0.455,1.875,0.762l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C16.035,20.176,17,19.495,17,18V9.414l2.707-2.707C20.098,6.316,20.098,5.684,19.707,5.293z M14.891,7.941c0.038-0.025,0.073-0.046,0.104-0.062C14.998,7.914,15,7.954,15,8v1.293l-2,2V9.202L14.891,7.941z M7,12c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146v2.439l-2.83,2.83C8.757,15.046,8.356,15,8,15c-0.552,0-1-0.448-1-1V12z M10.301,15.406L12,13.707v2.439C11.519,15.859,10.925,15.604,10.301,15.406z M14.994,18.12c-0.03-0.016-0.065-0.036-0.104-0.062L13,16.798v-4.091l2-2V18C15,18.046,14.998,18.086,14.994,18.12z\"/>\n    </g>\n</svg>`;\n        this.unmute.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M17.138,5.824c-0.449,0-0.905,0.152-1.356,0.453l-2.672,1.781C12.357,8.561,10.904,9,10,9c-1.654,0-3,1.346-3,3v2c0,1.654,1.346,3,3,3c0.904,0,2.357,0.439,3.109,0.941l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C18.035,20.176,19,19.495,19,18V8C19,6.505,18.035,5.824,17.138,5.824z M14,16.146C12.907,15.495,11.211,15,10,15c-0.552,0-1-0.448-1-1v-2c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146V16.146z M17,18c0,0.046-0.002,0.086-0.006,0.12c-0.03-0.016-0.065-0.036-0.104-0.062L15,16.798V9.202l1.891-1.261c0.038-0.025,0.073-0.046,0.104-0.062C16.998,7.914,17,7.954,17,8V18z\"/>\n    </g>\n</svg>`;\n        this.volumeDown.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M15.138,5.824c-0.449,0-0.905,0.152-1.356,0.453l-2.672,1.781C10.357,8.561,8.904,9,8,9c-1.654,0-3,1.346-3,3v2c0,1.654,1.346,3,3,3c0.904,0,2.357,0.439,3.109,0.941l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C16.035,20.176,17,19.495,17,18V8C17,6.505,16.035,5.824,15.138,5.824z M8,15c-0.552,0-1-0.448-1-1v-2c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146v6.293C10.907,15.495,9.211,15,8,15z M15,18c0,0.046-0.002,0.086-0.006,0.12c-0.03-0.016-0.065-0.036-0.104-0.062L13,16.798V9.202l1.891-1.261c0.038-0.025,0.073-0.046,0.104-0.062C14.998,7.914,15,7.954,15,8V18z\"/>\n        <path fill=\"#fff\" d=\"M18.292,10.294c-0.39,0.391-0.39,1.023,0.002,1.414c0.345,0.345,0.535,0.803,0.535,1.291c0,0.489-0.19,0.948-0.536,1.294c-0.391,0.39-0.391,1.023,0,1.414C18.488,15.902,18.744,16,19,16s0.512-0.098,0.707-0.293c0.724-0.723,1.122-1.685,1.122-2.708s-0.398-1.984-1.123-2.707C19.317,9.903,18.683,9.901,18.292,10.294z\"/>\n    </g>\n</svg>`;\n        this.volumeUp.svg = `<?xml version=\"1.0\"?>\n<svg baseProfile=\"tiny\" height=\"24px\" version=\"1.2\" viewBox=\"0 0 24 24\" width=\"24px\"\n    xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Layer_1\">\n        <path fill=\"#fff\" d=\"M16.706,10.292c-0.389-0.389-1.023-0.391-1.414,0.002c-0.39,0.391-0.39,1.023,0.002,1.414c0.345,0.345,0.535,0.803,0.535,1.291c0,0.489-0.19,0.948-0.536,1.294c-0.391,0.39-0.391,1.023,0,1.414C15.488,15.902,15.744,16,16,16s0.512-0.098,0.707-0.293c0.724-0.723,1.122-1.685,1.122-2.708S17.431,11.015,16.706,10.292z\"/>\n        <path fill=\"#fff\" d=\"M18.706,8.292c-0.391-0.389-1.023-0.39-1.414,0.002c-0.39,0.391-0.39,1.024,0.002,1.414c0.879,0.877,1.363,2.044,1.364,3.287c0.001,1.246-0.484,2.417-1.365,3.298c-0.391,0.391-0.391,1.023,0,1.414C17.488,17.902,17.744,18,18,18s0.512-0.098,0.707-0.293c1.259-1.259,1.952-2.933,1.951-4.713C20.657,11.217,19.964,9.547,18.706,8.292z\"/>\n        <path fill=\"#fff\" d=\"M20.706,6.292c-0.391-0.389-1.023-0.39-1.414,0.002c-0.39,0.391-0.39,1.024,0.002,1.414c1.412,1.409,2.191,3.285,2.192,5.284c0.002,2.002-0.777,3.885-2.193,5.301c-0.391,0.391-0.391,1.023,0,1.414C19.488,19.902,19.744,20,20,20s0.512-0.098,0.707-0.293c1.794-1.794,2.781-4.18,2.779-6.717C23.485,10.457,22.497,8.078,20.706,6.292z\"/>\n        <path fill=\"#fff\" d=\"M12.138,5.824c-0.449,0-0.905,0.152-1.356,0.453L8.109,8.059C7.357,8.561,5.904,9,5,9c-1.654,0-3,1.346-3,3v2c0,1.654,1.346,3,3,3c0.904,0,2.357,0.439,3.109,0.941l2.672,1.781c0.451,0.301,0.907,0.453,1.356,0.453C13.035,20.176,14,19.495,14,18V8C14,6.505,13.035,5.824,12.138,5.824z M5,15c-0.552,0-1-0.448-1-1v-2c0-0.552,0.448-1,1-1c1.211,0,2.907-0.495,4-1.146v6.293C7.907,15.495,6.211,15,5,15z M12,18c0,0.046-0.002,0.086-0.006,0.12c-0.03-0.016-0.065-0.036-0.104-0.062L10,16.798V9.202l1.891-1.261c0.038-0.025,0.073-0.046,0.104-0.062C11.998,7.914,12,7.954,12,8V18z\"/>\n    </g>\n</svg>`;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.mute.load(data.mute);\n        this.unmute.load(data.unmute);\n        this.volumeDown.load(data.volumeDown);\n        this.volumeUp.load(data.volumeUp);\n    }\n}\n", "import { isObject } from \"tsparticles-engine\";\nexport class SoundsVolume {\n    constructor() {\n        this.value = 100;\n        this.max = 100;\n        this.min = 0;\n        this.step = 10;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (isObject(data)) {\n            if (data.max !== undefined) {\n                this.max = data.max;\n            }\n            if (data.min !== undefined) {\n                this.min = data.min;\n            }\n            if (data.step !== undefined) {\n                this.step = data.step;\n            }\n            if (data.value !== undefined) {\n                this.value = data.value;\n            }\n        }\n        else {\n            this.value = data;\n        }\n    }\n}\n", "import { SoundsEvent } from \"./SoundsEvent\";\nimport { SoundsIcons } from \"./SoundsIcons\";\nimport { SoundsVolume } from \"./SoundsVolume\";\nexport class Sounds {\n    constructor() {\n        this.enable = false;\n        this.events = [];\n        this.icons = new SoundsIcons();\n        this.volume = new SoundsVolume();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.events !== undefined) {\n            this.events = data.events.map((t) => {\n                const event = new SoundsEvent();\n                event.load(t);\n                return event;\n            });\n        }\n        this.icons.load(data.icons);\n        if (data.volume !== undefined) {\n            this.volume.load(data.volume);\n        }\n    }\n}\n", "const notes = new Map();\nnotes.set(\"C\", [16.35, 32.7, 65.41, 130.81, 261.63, 523.25, 1046.5, 2093.0, 4186.01]);\nnotes.set(\"Db\", [17.32, 34.65, 69.3, 138.59, 277.18, 554.37, 1108.73, 2217.46, 4434.92]);\nnotes.set(\"D\", [18.35, 36.71, 73.42, 146.83, 293.66, 587.33, 1174.66, 2349.32, 4698.63]);\nnotes.set(\"Eb\", [19.45, 38.89, 77.78, 155.56, 311.13, 622.25, 1244.51, 2489.02, 4978.03]);\nnotes.set(\"E\", [20.6, 41.2, 82.41, 164.81, 329.63, 659.25, 1318.51, 2637.02, 5274.04]);\nnotes.set(\"F\", [21.83, 43.65, 87.31, 174.61, 349.23, 698.46, 1396.91, 2793.83, 5587.65]);\nnotes.set(\"Gb\", [23.12, 46.25, 92.5, 185.0, 369.99, 739.99, 1479.98, 2959.96, 5919.91]);\nnotes.set(\"G\", [24.5, 49.0, 98.0, 196.0, 392.0, 783.99, 1567.98, 3135.96, 6271.93]);\nnotes.set(\"Ab\", [25.96, 51.91, 103.83, 207.65, 415.3, 830.61, 1661.22, 3322.44, 6644.88]);\nnotes.set(\"A\", [27.5, 55.0, 110.0, 220.0, 440.0, 880.0, 1760.0, 3520.0, 7040.0]);\nnotes.set(\"Bb\", [29.14, 58.27, 116.54, 233.08, 466.16, 932.33, 1864.66, 3729.31, 7458.62]);\nnotes.set(\"B\", [30.87, 61.74, 123.47, 246.94, 493.88, 987.77, 1975.53, 3951.07, 7902.13]);\nnotes.set(\"pause\", [0]);\nexport function getNoteFrequency(note) {\n    const regex = /(([A-G]b?)(\\d))|pause/i, result = regex.exec(note);\n    if (!result || !result.length) {\n        return;\n    }\n    const noteKey = result[2] || result[0], noteItem = notes.get(noteKey);\n    if (!noteItem) {\n        return;\n    }\n    return noteItem[parseInt(result[3] || \"0\")];\n}\n", "import { clamp, executeOnSingleOrMultiple, getLogger, isArray, isNumber, itemFromArray, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { getNoteFrequency } from \"./utils\";\nfunction initImage(data) {\n    const img = document.createElement(\"img\"), { clickCb, container, display, iconOptions, margin, options, pos, rightOffsets } = data, { width, path, svg } = iconOptions;\n    setIconStyle(img, pos.top + margin, pos.right - (margin * (rightOffsets.length + 1) + width + rightOffsets.reduce((a, b) => a + b, 0)), display, options.fullScreen.zIndex + 1, width, margin);\n    img.src = path ?? (svg ? `data:image/svg+xml;base64,${btoa(svg)}` : \"\");\n    const parent = container.canvas.element?.parentNode || document.body;\n    parent.append(img);\n    img.addEventListener(\"click\", clickCb);\n    return img;\n}\nfunction removeImage(image) {\n    if (!image) {\n        return;\n    }\n    image.remove();\n}\nfunction setIconStyle(icon, top, left, display, zIndex, width, margin) {\n    icon.style.userSelect = \"none\";\n    icon.style.webkitUserSelect = \"none\";\n    icon.style.position = \"absolute\";\n    icon.style.top = `${top + margin}px`;\n    icon.style.left = `${left - margin - width}px`;\n    icon.style.display = display;\n    icon.style.zIndex = `${zIndex + 1}`;\n}\nexport class SoundsInstance {\n    constructor(container, engine) {\n        this._addBuffer = (audioCtx) => {\n            const buffer = audioCtx.createBufferSource();\n            this._audioSources.push(buffer);\n            return buffer;\n        };\n        this._addOscillator = (audioCtx) => {\n            const oscillator = audioCtx.createOscillator();\n            this._audioSources.push(oscillator);\n            return oscillator;\n        };\n        this._initEvents = () => {\n            const container = this._container, soundsOptions = container.actualOptions.sounds;\n            if (!soundsOptions?.enable || !container.canvas.element) {\n                return;\n            }\n            for (const event of soundsOptions.events) {\n                const cb = async (args) => {\n                    if (this._container !== args.container) {\n                        return;\n                    }\n                    if (!this._container || this._container.muted || this._container.destroyed) {\n                        executeOnSingleOrMultiple(event.event, (item) => {\n                            this._engine.removeEventListener(item, cb);\n                        });\n                        return;\n                    }\n                    if (event.filter && !event.filter(args)) {\n                        return;\n                    }\n                    if (event.audio) {\n                        this._playBuffer(itemFromSingleOrMultiple(event.audio));\n                    }\n                    else if (event.melodies) {\n                        const melody = itemFromArray(event.melodies);\n                        if (melody.melodies.length) {\n                            await Promise.allSettled(melody.melodies.map((m) => this._playNote(m.notes, 0, melody.loop)));\n                        }\n                        else {\n                            await this._playNote(melody.notes, 0, melody.loop);\n                        }\n                    }\n                    else if (event.notes) {\n                        const note = itemFromArray(event.notes);\n                        await this._playNote([note], 0, false);\n                    }\n                };\n                executeOnSingleOrMultiple(event.event, (item) => {\n                    this._engine.addEventListener(item, cb);\n                });\n            }\n        };\n        this._mute = () => {\n            const container = this._container;\n            if (!container.audioContext) {\n                return;\n            }\n            for (const source of this._audioSources) {\n                this._removeAudioSource(source);\n            }\n            if (this._gain) {\n                this._gain.disconnect();\n            }\n            container.audioContext.close();\n            container.audioContext = undefined;\n            this._engine.dispatchEvent(\"soundsMuted\", { container: this._container });\n        };\n        this._playBuffer = (audio) => {\n            const audioBuffer = this._audioMap.get(audio.source);\n            if (!audioBuffer) {\n                return;\n            }\n            const audioCtx = this._container.audioContext;\n            if (!audioCtx) {\n                return;\n            }\n            const source = this._addBuffer(audioCtx);\n            source.loop = audio.loop;\n            source.buffer = audioBuffer;\n            source.connect(this._gain ?? audioCtx.destination);\n            source.start();\n        };\n        this._playFrequency = async (frequency, duration) => {\n            if (!this._container.audioContext || !this._gain) {\n                return;\n            }\n            const oscillator = this._addOscillator(this._container.audioContext);\n            oscillator.connect(this._gain);\n            oscillator.type = \"sine\";\n            oscillator.frequency.value = frequency;\n            oscillator.start();\n            return new Promise((resolve) => {\n                setTimeout(() => {\n                    this._removeAudioSource(oscillator);\n                    resolve();\n                }, duration);\n            });\n        };\n        this._playMuteSound = () => {\n            const container = this._container;\n            if (!container.audioContext) {\n                return;\n            }\n            const gain = container.audioContext.createGain();\n            gain.connect(container.audioContext.destination);\n            gain.gain.value = 0;\n            const oscillator = container.audioContext.createOscillator();\n            oscillator.connect(gain);\n            oscillator.type = \"sine\";\n            oscillator.frequency.value = 1;\n            oscillator.start();\n            setTimeout(() => {\n                oscillator.stop();\n                oscillator.disconnect();\n                gain.disconnect();\n            });\n        };\n        this._playNote = async (notes, noteIdx, loop) => {\n            if (this._container.muted) {\n                return;\n            }\n            const note = notes[noteIdx];\n            if (!note) {\n                return;\n            }\n            const value = note.value;\n            const promises = executeOnSingleOrMultiple(value, async (_, idx) => {\n                return this._playNoteValue(notes, noteIdx, idx);\n            });\n            await (isArray(promises) ? Promise.allSettled(promises) : promises);\n            let nextNoteIdx = noteIdx + 1;\n            if (loop && nextNoteIdx >= notes.length) {\n                nextNoteIdx = nextNoteIdx % notes.length;\n            }\n            if (this._container.muted) {\n                return;\n            }\n            await this._playNote(notes, nextNoteIdx, loop);\n        };\n        this._playNoteValue = async (notes, noteIdx, valueIdx) => {\n            const note = notes[noteIdx];\n            if (!note) {\n                return;\n            }\n            const value = itemFromSingleOrMultiple(note.value, valueIdx, true);\n            try {\n                const freq = getNoteFrequency(value);\n                if (!isNumber(freq)) {\n                    return;\n                }\n                await this._playFrequency(freq, note.duration);\n            }\n            catch (e) {\n                getLogger().error(e);\n            }\n        };\n        this._removeAudioSource = (source) => {\n            source.stop();\n            source.disconnect();\n            this._audioSources.splice(this._audioSources.indexOf(source), 1);\n        };\n        this._unmute = () => {\n            const container = this._container, options = container.actualOptions, soundsOptions = options.sounds;\n            if (!soundsOptions) {\n                return;\n            }\n            if (!container.audioContext) {\n                container.audioContext = new AudioContext();\n            }\n            const { audioContext } = container;\n            if (!this._audioSources) {\n                this._audioSources = [];\n            }\n            const gain = audioContext.createGain();\n            gain.connect(audioContext.destination);\n            gain.gain.value = soundsOptions.volume.value / 100;\n            this._gain = gain;\n            this._initEvents();\n            this._engine.dispatchEvent(\"soundsUnmuted\", { container: this._container });\n        };\n        this._updateMuteIcons = () => {\n            const container = this._container, muteImg = this._muteImg, unmuteImg = this._unmuteImg;\n            if (muteImg) {\n                muteImg.style.display = container.muted ? \"block\" : \"none\";\n            }\n            if (unmuteImg) {\n                unmuteImg.style.display = container.muted ? \"none\" : \"block\";\n            }\n        };\n        this._updateMuteStatus = () => {\n            const container = this._container;\n            if (container.muted) {\n                this._mute();\n            }\n            else {\n                this._unmute();\n                this._playMuteSound();\n            }\n        };\n        this._updateVolume = () => {\n            const container = this._container, soundsOptions = container.actualOptions.sounds;\n            if (!soundsOptions?.enable) {\n                return;\n            }\n            clamp(this._volume, soundsOptions.volume.min, soundsOptions.volume.max);\n            let stateChanged = false;\n            if (this._volume <= 0 && !container.muted) {\n                this._volume = 0;\n                container.muted = true;\n                stateChanged = true;\n            }\n            else if (this._volume > 0 && container.muted) {\n                container.muted = false;\n                stateChanged = true;\n            }\n            if (stateChanged) {\n                this._updateMuteIcons();\n                this._updateMuteStatus();\n            }\n            if (this._gain?.gain) {\n                this._gain.gain.value = this._volume / 100;\n            }\n        };\n        this._container = container;\n        this._engine = engine;\n        this._volume = 0;\n        this._audioSources = [];\n        this._audioMap = new Map();\n    }\n    async init() {\n        const container = this._container, options = container.actualOptions, soundsOptions = options.sounds;\n        if (!soundsOptions?.enable) {\n            return;\n        }\n        this._volume = soundsOptions.volume.value;\n        const events = soundsOptions.events;\n        this._audioMap = new Map();\n        for (const event of events) {\n            if (!event.audio) {\n                continue;\n            }\n            executeOnSingleOrMultiple(event.audio, async (audio) => {\n                const response = await fetch(audio.source);\n                if (!response.ok) {\n                    return;\n                }\n                const arrayBuffer = await response.arrayBuffer();\n                container.audioContext = new AudioContext();\n                const audioBuffer = await container.audioContext.decodeAudioData(arrayBuffer);\n                this._audioMap.set(audio.source, audioBuffer);\n            });\n        }\n    }\n    async start() {\n        const container = this._container, options = container.actualOptions, soundsOptions = options.sounds;\n        if (!soundsOptions?.enable || !container.canvas.element) {\n            return;\n        }\n        container.muted = true;\n        const canvas = container.canvas.element, pos = {\n            top: canvas.offsetTop,\n            right: canvas.offsetLeft + canvas.offsetWidth,\n        }, { mute, unmute, volumeDown, volumeUp } = soundsOptions.icons, margin = 10;\n        const toggleMute = () => {\n            container.muted = !container.muted;\n            this._updateMuteIcons();\n            this._updateMuteStatus();\n        };\n        this._muteImg = initImage({\n            container,\n            options,\n            pos,\n            display: \"block\",\n            iconOptions: mute,\n            margin,\n            rightOffsets: [volumeDown.width, volumeUp.width],\n            clickCb: toggleMute,\n        });\n        this._unmuteImg = initImage({\n            container,\n            options,\n            pos,\n            display: \"none\",\n            iconOptions: unmute,\n            margin,\n            rightOffsets: [volumeDown.width, volumeUp.width],\n            clickCb: toggleMute,\n        });\n        this._volumeDownImg = initImage({\n            container,\n            options,\n            pos,\n            display: \"block\",\n            iconOptions: volumeDown,\n            margin,\n            rightOffsets: [volumeUp.width],\n            clickCb: () => {\n                if (container.muted) {\n                    this._volume = 0;\n                }\n                this._volume -= soundsOptions.volume.step;\n                this._updateVolume();\n            },\n        });\n        this._volumeUpImg = initImage({\n            container,\n            options,\n            pos,\n            display: \"block\",\n            iconOptions: volumeUp,\n            margin,\n            rightOffsets: [],\n            clickCb: () => {\n                if (container.muted) {\n                    this._volume = 0;\n                }\n                this._volume += soundsOptions.volume.step;\n                this._updateVolume();\n            },\n        });\n    }\n    stop() {\n        this._container.muted = true;\n        this._mute();\n        removeImage(this._muteImg);\n        removeImage(this._unmuteImg);\n        removeImage(this._volumeDownImg);\n        removeImage(this._volumeUpImg);\n    }\n}\n", "import { Sounds } from \"./Options/Classes/Sounds\";\nimport { SoundsInstance } from \"./SoundsInstance\";\nclass SoundsPlugin {\n    constructor(engine) {\n        this.id = \"sounds\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return new SoundsInstance(container, this._engine);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let soundsOptions = options.sounds;\n        if (soundsOptions?.load === undefined) {\n            options.sounds = soundsOptions = new Sounds();\n        }\n        soundsOptions.load(source?.sounds);\n    }\n    needsPlugin(options) {\n        return options?.sounds?.enable ?? false;\n    }\n}\nexport async function loadSoundsPlugin(engine, refresh = true) {\n    await engine.addPlugin(new SoundsPlugin(engine), refresh);\n}\n", "import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n", "import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n", "import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n", "import { rgbToHsl, setRangeValue, stringToRgb, } from \"tsparticles-engine\";\nconst explodeSoundCheck = (args) => {\n    const data = args.data;\n    return data.particle.shape === \"line\";\n};\nconst fixRange = (value, min, max) => {\n    const diffSMax = value.max > max ? value.max - max : 0;\n    let res = setRangeValue(value);\n    if (diffSMax) {\n        res = setRangeValue(value.min - diffSMax, max);\n    }\n    const diffSMin = value.min < min ? value.min : 0;\n    if (diffSMin) {\n        res = setRangeValue(0, value.max + diffSMin);\n    }\n    return res;\n};\nconst fireworksOptions = [\"#ff595e\", \"#ffca3a\", \"#8ac926\", \"#1982c4\", \"#6a4c93\"]\n    .map((color) => {\n    const rgb = stringToRgb(color);\n    if (!rgb) {\n        return undefined;\n    }\n    const hsl = rgbToHsl(rgb), sRange = fixRange({ min: hsl.s - 30, max: hsl.s + 30 }, 0, 100), lRange = fixRange({ min: hsl.l - 30, max: hsl.l + 30 }, 0, 100);\n    return {\n        color: {\n            value: {\n                h: hsl.h,\n                s: sRange,\n                l: lRange,\n            },\n        },\n        stroke: {\n            width: 0,\n        },\n        number: {\n            value: 0,\n        },\n        opacity: {\n            value: {\n                min: 0.1,\n                max: 1,\n            },\n            animation: {\n                enable: true,\n                speed: 0.7,\n                sync: false,\n                startValue: \"max\",\n                destroy: \"min\",\n            },\n        },\n        shape: {\n            type: \"circle\",\n        },\n        size: {\n            value: { min: 1, max: 2 },\n            animation: {\n                enable: true,\n                speed: 5,\n                count: 1,\n                sync: false,\n                startValue: \"min\",\n                destroy: \"none\",\n            },\n        },\n        life: {\n            count: 1,\n            duration: {\n                value: {\n                    min: 1,\n                    max: 2,\n                },\n            },\n        },\n        move: {\n            decay: { min: 0.075, max: 0.1 },\n            enable: true,\n            gravity: {\n                enable: true,\n                inverse: false,\n                acceleration: 5,\n            },\n            speed: { min: 5, max: 15 },\n            direction: \"none\",\n            outModes: \"destroy\",\n        },\n    };\n})\n    .filter((t) => t !== undefined);\nexport const options = {\n    detectRetina: true,\n    background: {\n        color: \"#000\",\n    },\n    fpsLimit: 120,\n    emitters: {\n        direction: \"top\",\n        life: {\n            count: 0,\n            duration: 0.1,\n            delay: 0.1,\n        },\n        rate: {\n            delay: 0.05,\n            quantity: 1,\n        },\n        size: {\n            width: 100,\n            height: 0,\n        },\n        position: {\n            y: 100,\n            x: 50,\n        },\n    },\n    particles: {\n        number: {\n            value: 0,\n        },\n        destroy: {\n            mode: \"split\",\n            bounds: {\n                top: { min: 10, max: 30 },\n            },\n            split: {\n                sizeOffset: false,\n                count: 1,\n                factor: {\n                    value: 0.333333,\n                },\n                rate: {\n                    value: { min: 75, max: 150 },\n                },\n                particles: fireworksOptions,\n            },\n        },\n        life: {\n            count: 1,\n        },\n        shape: {\n            type: \"line\",\n        },\n        size: {\n            value: {\n                min: 0.1,\n                max: 50,\n            },\n            animation: {\n                enable: true,\n                sync: true,\n                speed: 90,\n                startValue: \"max\",\n                destroy: \"min\",\n            },\n        },\n        stroke: {\n            color: {\n                value: \"#ffffff\",\n            },\n            width: 1,\n        },\n        rotate: {\n            path: true,\n        },\n        move: {\n            enable: true,\n            gravity: {\n                acceleration: 15,\n                enable: true,\n                inverse: true,\n                maxSpeed: 100,\n            },\n            speed: {\n                min: 10,\n                max: 20,\n            },\n            outModes: {\n                default: \"destroy\",\n                top: \"none\",\n            },\n            trail: {\n                fillColor: \"#000\",\n                enable: true,\n                length: 10,\n            },\n        },\n    },\n    sounds: {\n        enable: true,\n        events: [\n            {\n                event: \"particleRemoved\",\n                filter: explodeSoundCheck,\n                audio: [\n                    \"https://particles.js.org/audio/explosion0.mp3\",\n                    \"https://particles.js.org/audio/explosion1.mp3\",\n                    \"https://particles.js.org/audio/explosion2.mp3\",\n                ],\n            },\n        ],\n        volume: 50,\n    },\n};\n", "import { loadBasic } from \"tsparticles-basic\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSoundsPlugin } from \"tsparticles-plugin-sounds\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { options } from \"./options\";\nexport async function loadFireworksPreset(engine, refresh = true) {\n    await loadBasic(engine, false);\n    await loadEmittersPlugin(engine, false);\n    await loadSoundsPlugin(engine, false);\n    await loadLineShape(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadDestroyUpdater(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await engine.addPreset(\"fireworks\", options, refresh);\n}\n"],
  "mappings": "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",
  "names": ["options", "options", "options", "container", "notes", "options", "options"]
}
