"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MotionInstance = void 0;
const tsparticles_engine_1 = require("tsparticles-engine");
class MotionInstance {
    constructor(container, engine) {
        this._handleMotionChange = (mediaQuery) => {
            const container = this._container, motion = container.actualOptions.motion;
            if (!motion) {
                return;
            }
            container.retina.reduceFactor = mediaQuery.matches
                ? motion.disable
                    ? 0
                    : motion.reduce.value
                        ? 1 / motion.reduce.factor
                        : 1
                : 1;
        };
        this._container = container;
        this._engine = engine;
    }
    async init() {
        const container = this._container, options = container.actualOptions.motion;
        if (!(options && (options.disable || options.reduce.value))) {
            container.retina.reduceFactor = 1;
            return;
        }
        const mediaQuery = (0, tsparticles_engine_1.safeMatchMedia)("(prefers-reduced-motion: reduce)");
        if (!mediaQuery) {
            container.retina.reduceFactor = 1;
            return;
        }
        this._handleMotionChange(mediaQuery);
        const handleChange = async () => {
            this._handleMotionChange(mediaQuery);
            try {
                await container.refresh();
            }
            catch {
            }
        };
        if (mediaQuery.addEventListener !== undefined) {
            mediaQuery.addEventListener("change", handleChange);
        }
        else if (mediaQuery.addListener !== undefined) {
            mediaQuery.addListener(handleChange);
        }
    }
}
exports.MotionInstance = MotionInstance;
