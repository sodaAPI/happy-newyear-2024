import { type IOptionLoader, type RecursivePartial, type SingleOrMultiple } from "tsparticles-engine";
import type { FilterFunction } from "../../types";
import type { ISoundsEvent } from "../Interfaces/ISoundsEvent";
import { SoundsAudio } from "./SoundsAudio";
import { SoundsMelody } from "./SoundsMelody";
import { SoundsNote } from "./SoundsNote";
declare global {
    interface Window {
        [key: string]: unknown;
    }
}
export declare class SoundsEvent implements ISoundsEvent, IOptionLoader<ISoundsEvent> {
    audio?: SingleOrMultiple<SoundsAudio>;
    event: SingleOrMultiple<string>;
    filter?: FilterFunction;
    melodies?: SoundsMelody[];
    notes?: SoundsNote[];
    constructor();
    load(data?: RecursivePartial<ISoundsEvent>): void;
}
